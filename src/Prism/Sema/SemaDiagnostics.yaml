
diags:
  - name: UndeclaredID
    base: SemaDiagnostic
    kind: Error
    members:
      - name: similar
        type: Symbol const*
    ctor_body: UndeclaredIDNotes(*this, similar);
    header: >
      str << "Use of undeclared identifier '" << getID(facet(), sourceContext())
          << "'";

  - name: TypeDefCycle
    base: SemaDiagnostic
    kind: Error
    comment: 'Cyclic structure definition'
    no_source: true
    members:
      - name: cycle
        type: std::span<Symbol const* const>
        ctor_only: true
    ctor_body: TypeDefCycleNotes(*this, cycle);
    header: >
      str << "Detected a cycle in a type definition:";

  - name: BadSymRef
    base: SemaDiagnostic
    kind: Error
    members:
      - name: providedSymbol
        type: Symbol const*
      - name: expectedSymbolType
        type: SymbolType
    header: >
      str << "Expected " << prettyName(expectedSymbolType) << ", have "
          << formatName(providedSymbol);

  - name: ThisParamBadPosition
    base: SemaDiagnostic
    kind: Error
    header: >
      str << "'this' must be the first parameter";

  - name: AmbiguousConformance
    base: SemaDiagnostic
    kind: Error
    members:
      - name: sym
        type: Symbol const*
      - name: matches
        type: std::span<Obligation const* const>
        ctor_only: true
    ctor_body: AmbiguousConformanceNotes(*this, matches);
    header: >
      str << "Ambiguous conformance of "
          << formatDecl(sym, { .primaryQualified = true });
 
  - name: IncompleteImpl
    base: SemaDiagnostic
    kind: Error
    members:
      - name: impl
        type: Symbol const*
      - name: interface
        type: InterfaceLike const&
        ctor_only: true
    ctor_body: IncompleteImplNotes(*this, interface);
    header: >
      if (isa<TraitImpl>(impl))
          str << "Incomplete trait implementation " << formatDecl(impl);
      else
          str << "Declaration of " << formatName(impl)
              << " is missing implementations for a base trait";
     

  - name: DuplicateTraitImpl
    base: SemaDiagnostic
    kind: Error
    members:
      - name: impl
        type: Symbol const*
      - name: existing
        type: Symbol const*
        ctor_only: true
    ctor_body: DuplicateTraitImplNotes(*this, existing);
    header: >
      str << "Duplicate trait implementation " << formatDecl(impl);
